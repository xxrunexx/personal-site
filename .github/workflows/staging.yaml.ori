name: "build & push docker image"
on:
  push:
    branches:
      - "master"
jobs:
  build-push-docker:
    name: "build image and push registry dockerhub"
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v2
      - name: build image
        run: docker build -t xxrunexx/hugosite:latest .
      - name: login dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: push image to dockerhub
        run: docker push xxrunexx/hugosite:latest

  deployment-server:
    name: "deploy to ec2"
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v2
      - name: configuration ssh
        env:
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.INVOICEIN_PEM }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/invoicein.pem
          chmod 700 ~/.ssh/invoicein.pem
          cat >> ~/.ssh/config << END
          Host development 
            HostName $SSH_HOST
            User  $SSH_USER
            IdentityFile ~/.ssh/invoicein.pem
            StrictHostKeyChecking=no
          END
      - name: connect to ec2 AWS, remove container before pull, pull from registry, start
        run: ssh development 'sudo docker rm -f $(docker ps -a -q) || true && docker pull xxrunexx/invoice-api:latest && docker run -d -p 8000:8000 --name invoice-api xxrunexx/invoice-api:latest /app/main SERVER'
